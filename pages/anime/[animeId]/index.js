import Head from "next/head";
import CoverImage from "../../../components/anime-page/CoverImage";
import AnimeInfo from "../../../components/anime-page/AnimeInfo";
import EpisodeList from "../../../components/anime-page/EpisodeList";
import Row from "../../../components/home-page/Row";
import { Fragment } from "react";

export default function Anime({ animeInfo, animeEpisode, episodeCount }) {
    return (
        <Fragment>
            <Head>
                <title>{`${
                    animeInfo.title.english ||
                    animeInfo.title.romaji ||
                    animeInfo.title.native
                } | Animflix`}</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="relative min-h-screen max-w-[1920px] m-auto overflow-x-hidden pb-[4em]">
                <CoverImage imageSrc={animeInfo.cover} />
                <div className="max-w-[1750px] m-auto">
                    <AnimeInfo data={animeInfo} />
                    {animeInfo.type.toLowerCase() !== "movie" &&
                        animeInfo.episodes.length > 0 && (
                            <EpisodeList
                                animeId={animeInfo.id}
                                episodes={animeEpisode}
                                episodeCount={episodeCount}
                            />
                        )}
                    {animeInfo.recommendations.length > 0 && (
                        <Row
                            title="Recommended Shows"
                            data={animeInfo.recommendations}
                            type="Card"
                        />
                    )}
                </div>
            </main>
        </Fragment>
    );
}

export async function getServerSideProps(context) {
    const { params } = context;
    const { animeId } = params;

    const response = await fetch(
        `${process.env.NEXT_PUBLIC_BASE_API_PATH}/info/${animeId}`
    );
    const animeInfo = await response.json();

    return {
        props: {
            animeInfo,
            animeEpisode: animeInfo.episodes,
            episodeCount: animeInfo.totalEpisodes || animeInfo.episodes.length,
        },
    };
}

Anime.getLayout = function PageLayout(page) {
    return page;
};
